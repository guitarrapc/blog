name: create draft pull request
description: "Create draft pull request for entry"
inputs:
  title:
    description: "title for pull request"
    required: true
  draft:
    description: "create draft pull request"
    required: true
  BLOG_DOMAIN:
    description: "blog domain"
    required: true
  ENTRY_PATH:
    description: "entry path"
    required: true

runs:
  using: "composite"
  steps:
    - name: set entry variables
      id: set-entry-variables
      run: |
        echo "EDIT_URL=$(yq --front-matter=extract '.EditURL' ${{ inputs.ENTRY_PATH }})" >> $GITHUB_OUTPUT
        echo "ENTRY_ID=$(yq --front-matter=extract '.EditURL' ${{ inputs.ENTRY_PATH }} | grep -oP '[^/]+\d$')" >> $GITHUB_OUTPUT
        echo "PREVIEW_URL=$(yq --front-matter=extract '.PreviewURL' ${{ inputs.ENTRY_PATH }})" >> $GITHUB_OUTPUT
      shell: bash
    - name: set owner
      id: set-owner
      run: |
        owner=$(yq ".[\"${{ inputs.BLOG_DOMAIN }}\"].owner" blogsync.yaml)
        if [[ "$owner" == 'null' ]]; then
          owner=$(yq ".[\"${{ inputs.BLOG_DOMAIN }}\"].username" blogsync.yaml)
        fi
        echo "OWNER_NAME=$owner" >> $GITHUB_OUTPUT
      shell: bash
    - name: delete other files
      run: |
        set +eo pipefail
        delete_files=($(git ls-files -o --exclude-standard | xargs -r grep -xL "EditURL: ${{ steps.set-entry-variables.outputs.EDIT_URL }}"))
        for file in ${delete_files[@]}; do
          rm "$file"
        done

        restore_files=($(git ls-files -m --exclude-standard | xargs -r grep -xL "EditURL: ${{ steps.set-entry-variables.outputs.EDIT_URL }}"))
        for file in ${restore_files[@]}; do
          git restore "$file"
        done
      shell: bash
    - name: move draft and update metadata
      uses: hatena/hatenablog-workflows/.github/actions/move-draft-and-update-metadata@1e932419b6749d6b4ad3d0e30d07df87a1ed3c3e # v1
    - name: create draft pull request
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
      env:
        OWNER_NAME: ${{ steps.set-owner.outputs.OWNER_NAME }}
        ENTRY_ID: ${{ steps.set-entry-variables.outputs.ENTRY_ID }}
        PREVIEW_URL: ${{ steps.set-entry-variables.outputs.PREVIEW_URL }}
      with:
        title: ${{ inputs.title }}
        branch: draft-entry-${{ env.ENTRY_ID }}
        body: |
          ## ${{ inputs.title }}

          - 編集ページのURL: https://blog.hatena.ne.jp/${{ env.OWNER_NAME }}/${{ inputs.BLOG_DOMAIN }}/edit?entry=${{ env.ENTRY_ID }}
          - プレビューへのURL: ${{ env.PREVIEW_URL == 'null' && 'なし' || env.PREVIEW_URL }}

          ## レビューに関して

          レビューする際には、以下のprefix(接頭辞)を付けましょう。

          <!-- for GitHub Copilot review rule -->
          [must]→ かならず変更してね
          [imo]→ 自分の意見だとこうだけど修正必須ではないよ(in my opinion)
          [nits]→ ささいな指摘(nitpick)
          [ask]→ 質問
          [fyi]→ 参考情報
          <!-- for GitHub Copilot review rule-->

          <!-- for GitHub Copilot review structure -->

          ブログ記事は次の構造です。

          | パス | レビュー対象 | 概要 |
          | --- | --- | --- |
          | draft_entries/**.md | レビュー対象です | 下書きのブログ記事です |
          | entries/**.md | レビュー対象です | すでに公開されているブログ記事です |

          <!-- for GitHub Copilot review structure -->

          <!-- for GitHub Copilot review keypoint -->

          レビューは以下のルールに従ってください。

          - レビューは日本語で行ってください
          - 指摘、修正に至った理由や背景を説明してください
          - 記事タイトルはメタセクションのTitleを参照してください
          - 下書きブログ記事において、記事のタイトルは内容を要約したものか評価し、より良いタイトル案を提案してください
          - 公開されているブログ記事のタイトルは変更しないでください
          - 内容に著しい誤りや誤解が見受けられる場合は指摘し、修正を提案してください
          - 文章が分かりにくい、不明瞭、冗長な場合は指摘し、修正を提案してください

          文章の校正は以下のルールに従ってください。

          - textlintの文章の校正に従ってください
          - textlintは、package.json及び.textlintrc.jsonにルールが定義されているので参照してください
          - 提示する修正文章は、textlintのルールに従ってください
          - 例えば英語や製品名と「日本語の助詞」の間にスペースは含めません

          <!-- for GitHub Copilot review keypoint -->

        delete-branch: true
        draft: ${{ inputs.draft == 'true' }}
